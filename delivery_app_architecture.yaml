version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: delivery_user
      POSTGRES_PASSWORD: delivery_pass
      POSTGRES_DB: delivery_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak_user
      KC_DB_PASSWORD: keycloak_pass
    command: start-dev
    depends_on:
      - postgres
    ports:
      - "8080:8080"

  backend:
    build: ./backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/delivery_db
      SPRING_DATASOURCE_USERNAME: delivery_user
      SPRING_DATASOURCE_PASSWORD: delivery_pass
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080/auth
      KEYCLOAK_REALM: delivery-realm
      KEYCLOAK_RESOURCE: delivery-backend
      KEYCLOAK_PUBLIC_KEY: ${KEYCLOAK_PUBLIC_KEY}
    depends_on:
      - postgres
      - kafka
      - keycloak
    ports:
      - "8081:8080"

volumes:
  pgdata:
