spring:
  application:
    name: delivery-backend
  
  datasource:
    url: jdbc:postgresql://localhost:5432/delivery_db
    username: delivery_user
    password: delivery_pass
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: delivery-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/auth/realms/delivery-realm
          jwk-set-uri: http://localhost:8080/auth/realms/delivery-realm/protocol/openid-connect/certs

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.mobility.delivery: DEBUG
    org.springframework.kafka: DEBUG
    org.springframework.security: DEBUG

kafka:
  topics:
    delivery-events: delivery-events
    driver-events: driver-events
    vehicle-events: vehicle-events 